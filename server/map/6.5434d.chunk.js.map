{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack:///./node_modules/react-transition-group/index.js","webpack:///./node_modules/react-transition-group/Transition.js","webpack:///./node_modules/react-transition-group/utils/PropTypes.js","webpack:///./node_modules/react-transition-group/TransitionGroup.js","webpack:///./node_modules/react-transition-group/CSSTransition.js","webpack:///./node_modules/dom-helpers/class/addClass.js","webpack:///./node_modules/dom-helpers/class/hasClass.js","webpack:///./node_modules/dom-helpers/class/removeClass.js","webpack:///./node_modules/react-transition-group/ReplaceTransition.js","webpack:///./node_modules/react-transition-group/utils/ChildMapping.js"],"names":["module","exports","obj","__esModule","default","_CSSTransition","_interopRequireDefault","__webpack_require__","_ReplaceTransition","_TransitionGroup","_Transition","Transition","TransitionGroup","ReplaceTransition","CSSTransition","EXITING","ENTERED","ENTERING","EXITED","UNMOUNTED","PropTypes","newObj","key","Object","prototype","hasOwnProperty","call","desc","defineProperty","getOwnPropertyDescriptor","get","set","_interopRequireWildcard","_react","_reactDom","_reactLifecyclesCompat","_React$Component","subClass","superClass","props","context","_this","this","initialStatus","parentGroup","transitionGroup","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","create","constructor","__proto__","_proto","getChildContext","getDerivedStateFromProps","_ref","prevState","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","timeout","mounting","node","findDOMNode","performEnter","performExit","setState","_this2","appearing","timeouts","onEnter","safeSetState","onEntering","onTransitionEnd","onEntered","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","addEndListener","setTimeout","render","_this$props","children","childProps","source","excluded","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","child","Children","only","cloneElement","Component","noop","contextTypes","object","childContextTypes","propTypes","defaultProps","_default","polyfill","classNamesShape","timeoutsShape","_propTypes","_ChildMapping","_extends","assign","arguments","apply","_assertThisInitialized","self","ReferenceError","values","map","k","handleExited","bind","firstRender","appeared","mounted","nextProps","prevChildMapping","getInitialChildMapping","getNextChildMapping","currentChildMapping","getChildMapping","component","childFactory","createElement","isRequired","_addClass","_removeClass","addClass","classes","split","forEach","c","removeClass","_len","args","Array","_key","concat","className","getClassNames","removeClasses","activeClassName","reflowAndAddClass","doneClassName","type","classNames","_this$getClassNames7","scrollTop","element","classList","add","_hasClass","setAttribute","baseVal","contains","replaceClassName","origClass","classToRemove","replace","RegExp","remove","_args","handleEnter","_len2","_key2","handleLifecycle","handleEntering","_len3","_key3","handleEntered","_len4","_key4","handleExit","_len5","_key5","handleExiting","_len6","_key6","_len7","_key7","idx","originalArgs","_child$props","toArray","inProp","_React$Children$toArr","first","second","mergeChildMappings","getProp","nextChildMapping","isValidElement","hasPrev","hasNext","prevChild","isLeaving","mapFn","result","mapper","prev","next","getValueForKey","nextKeysPending","pendingKeys","prevKey","push","childMapping","nextKey","pendingNextKey","prop"],"mappings":"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","file":"app/chunks/6.5434d.chunk.js","sourcesContent":["function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","\"use strict\";\n\nvar _CSSTransition = _interopRequireDefault(require(\"./CSSTransition\"));\n\nvar _ReplaceTransition = _interopRequireDefault(require(\"./ReplaceTransition\"));\n\nvar _TransitionGroup = _interopRequireDefault(require(\"./TransitionGroup\"));\n\nvar _Transition = _interopRequireDefault(require(\"./Transition\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = {\n  Transition: _Transition.default,\n  TransitionGroup: _TransitionGroup.default,\n  ReplaceTransition: _ReplaceTransition.default,\n  CSSTransition: _CSSTransition.default\n};","\"use strict\";\n\nexports.__esModule = true;\nexports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;\n\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _PropTypes = require(\"./utils/PropTypes\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar UNMOUNTED = 'unmounted';\nexports.UNMOUNTED = UNMOUNTED;\nvar EXITED = 'exited';\nexports.EXITED = EXITED;\nvar ENTERING = 'entering';\nexports.ENTERING = ENTERING;\nvar ENTERED = 'entered';\nexports.ENTERED = ENTERED;\nvar EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the components.\n * It's up to you to give meaning and effect to those states. For example we can\n * add styles to a component when it enters or exits:\n *\n * ```jsx\n * import Transition from 'react-transition-group/Transition';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 0 },\n *   entered:  { opacity: 1 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {(state) => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * As noted the `Transition` component doesn't _do_ anything by itself to its child component.\n * What it does do is track transition states over time so you can update the\n * component (such as by adding styles or classes) when it changes states.\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component begins the\n * \"Enter\" stage. During this stage, the component will shift from its current transition state,\n * to `'entering'` for the duration of the transition and then to the `'entered'` stage once\n * it's complete. Let's take the following example:\n *\n * ```jsx\n * state = { in: false };\n *\n * toggleEnterState = () => {\n *   this.setState({ in: true });\n * }\n *\n * render() {\n *   return (\n *     <div>\n *       <Transition in={this.state.in} timeout={500} />\n *       <button onClick={this.toggleEnterState}>Click to Enter</button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state and\n * stay there for 500ms (the value of `timeout`) before it finally switches to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from `'exiting'` to `'exited'`.\n *\n * ## Timing\n *\n * Timing is often the trickiest part of animation, mistakes can result in slight delays\n * that are hard to pin down. A common example is when you want to add an exit transition,\n * you should set the desired final styles when the state is `'exiting'`. That's when the\n * transition to those styles will start and, if you matched the `timeout` prop with the\n * CSS Transition duration, it will end exactly when the state changes to `'exited'`.\n *\n * > **Note**: For simpler transitions the `Transition` component might be enough, but\n * > take into account that it's platform-agnostic, while the `CSSTransition` component\n * > [forces reflows](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * > in order to make more complex transitions more predictable. For example, even though\n * > classes `example-enter` and `example-enter-active` are applied immediately one after\n * > another, you can still transition from one to the other because of the forced reflow\n * > (read [this issue](https://github.com/reactjs/react-transition-group/issues/159#issuecomment-322761171)\n * > for more info). Take this into account when choosing between `Transition` and\n * > `CSSTransition`.\n */\n\nexports.EXITING = EXITING;\n\nvar Transition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context.transitionGroup; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  var _proto = Transition.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    return {\n      transitionGroup: null // allows for nested Transitions\n\n    };\n  };\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  }; // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter;\n      appear = timeout.appear;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      var node = _reactDom.default.findDOMNode(this);\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(node, mounting);\n      } else {\n        this.performExit(node);\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(node, mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;\n    var timeouts = this.getTimeouts(); // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(node);\n      });\n      return;\n    }\n\n    this.props.onEnter(node, appearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(node, appearing); // FIXME: appear timeout?\n\n\n      _this2.onTransitionEnd(node, timeouts.enter, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(node, appearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit(node) {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED\n\n    if (!exit) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(node);\n      });\n      return;\n    }\n\n    this.props.onExit(node);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(node);\n\n      _this3.onTransitionEnd(node, timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(node);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {\n    this.setNextCallback(handler);\n\n    if (node) {\n      if (this.props.addEndListener) {\n        this.props.addEndListener(node, this.nextCallback);\n      }\n\n      if (timeout != null) {\n        setTimeout(this.nextCallback, timeout);\n      }\n    } else {\n      setTimeout(this.nextCallback, 0);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\"]); // filter props for Transtition\n\n\n    delete childProps.in;\n    delete childProps.mountOnEnter;\n    delete childProps.unmountOnExit;\n    delete childProps.appear;\n    delete childProps.enter;\n    delete childProps.exit;\n    delete childProps.timeout;\n    delete childProps.addEndListener;\n    delete childProps.onEnter;\n    delete childProps.onEntering;\n    delete childProps.onEntered;\n    delete childProps.onExit;\n    delete childProps.onExiting;\n    delete childProps.onExited;\n\n    if (typeof children === 'function') {\n      return children(status, childProps);\n    }\n\n    var child = _react.default.Children.only(children);\n\n    return _react.default.cloneElement(child, childProps);\n  };\n\n  return Transition;\n}(_react.default.Component);\n\nTransition.contextTypes = {\n  transitionGroup: PropTypes.object\n};\nTransition.childContextTypes = {\n  transitionGroup: function transitionGroup() {}\n};\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A `function` child can be used instead of a React element.\n   * This function is called with the current transition status\n   * ('entering', 'entered', 'exiting', 'exited', 'unmounted'), which can be used\n   * to apply context specific props to a component.\n   *\n   * ```jsx\n   * <Transition timeout={150}>\n   *   {(status) => (\n   *     <MyComponent className={`fade fade-${status}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.\n   * If you want to transition on the first mount set `appear` to `true`, and the\n   * component will transition in as soon as the `<Transition>` mounts.\n   *\n   * > Note: there are no specific \"appear\" states. `appear` only adds an additional `enter` transition.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided\n   *\n   * You may specify a single timeout for all transitions like: `timeout={500}`,\n   * or individually like:\n   *\n   * ```jsx\n   * timeout={{\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * @type {number | { enter?: number, exit?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = process.env.NODE_ENV !== \"production\" ? _PropTypes.timeoutsShape : {};;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. **Note:** Timeouts are still used as a fallback if provided.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func // Name the function so it is clearer in the documentation\n\n} : {};\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = 0;\nTransition.EXITED = 1;\nTransition.ENTERING = 2;\nTransition.ENTERED = 3;\nTransition.EXITING = 4;\n\nvar _default = (0, _reactLifecyclesCompat.polyfill)(Transition);\n\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.classNamesShape = exports.timeoutsShape = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar timeoutsShape = process.env.NODE_ENV !== 'production' ? _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({\n  enter: _propTypes.default.number,\n  exit: _propTypes.default.number\n}).isRequired]) : null;\nexports.timeoutsShape = timeoutsShape;\nvar classNamesShape = process.env.NODE_ENV !== 'production' ? _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({\n  enter: _propTypes.default.string,\n  exit: _propTypes.default.string,\n  active: _propTypes.default.string\n}), _propTypes.default.shape({\n  enter: _propTypes.default.string,\n  enterDone: _propTypes.default.string,\n  enterActive: _propTypes.default.string,\n  exit: _propTypes.default.string,\n  exitDone: _propTypes.default.string,\n  exitActive: _propTypes.default.string\n})]) : null;\nexports.classNamesShape = classNamesShape;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _ChildMapping = require(\"./utils/ChildMapping\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n  /**\n   * The `<TransitionGroup>` component manages a set of transition components\n   * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n   * components, `<TransitionGroup>` is a state machine for managing the mounting\n   * and unmounting of components over time.\n   *\n   * Consider the example below. As items are removed or added to the TodoList the\n   * `in` prop is toggled automatically by the `<TransitionGroup>`.\n   *\n   * Note that `<TransitionGroup>`  does not define any animation behavior!\n   * Exactly _how_ a list item animates is up to the individual transition\n   * component. This means you can mix and match animations across different list\n   * items.\n   */\n\n};\n\nvar TransitionGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_assertThisInitialized(_this))); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    return {\n      transitionGroup: {\n        isMounting: !this.appeared\n      }\n    };\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.appeared = true;\n    this.mounted = true;\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? (0, _ChildMapping.getInitialChildMapping)(nextProps, handleExited) : (0, _ChildMapping.getNextChildMapping)(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  };\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = (0, _ChildMapping.getChildMapping)(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return children;\n    }\n\n    return _react.default.createElement(Component, props, children);\n  };\n\n  return TransitionGroup;\n}(_react.default.Component);\n\nTransitionGroup.childContextTypes = {\n  transitionGroup: _propTypes.default.object.isRequired\n};\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: _propTypes.default.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: _propTypes.default.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: _propTypes.default.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: _propTypes.default.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: _propTypes.default.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\n\nvar _default = (0, _reactLifecyclesCompat.polyfill)(TransitionGroup);\n\nexports.default = _default;\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nvar _addClass = _interopRequireDefault(require(\"dom-helpers/class/addClass\"));\n\nvar _removeClass = _interopRequireDefault(require(\"dom-helpers/class/removeClass\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Transition = _interopRequireDefault(require(\"./Transition\"));\n\nvar _PropTypes = require(\"./utils/PropTypes\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return (0, _addClass.default)(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return (0, _removeClass.default)(node, c);\n  });\n};\n/**\n * A `Transition` component using CSS transitions and animations.\n * It's inspired by the excellent [ng-animate](http://www.nganimate.org/) library.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` stages of the transition. The first class is applied and then a\n * second \"active\" class in order to activate the css animation. After the animation,\n * matching `done` class names are applied to persist the animation state.\n *\n * When the `in` prop is toggled to `true` the Component will get\n * the `example-enter` CSS class and the `example-enter-active` CSS class\n * added in the next tick. This is a convention based on the `classNames` prop.\n */\n\n\nvar CSSTransition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.onEnter = function (node, appearing) {\n      var _this$getClassNames = _this.getClassNames(appearing ? 'appear' : 'enter'),\n          className = _this$getClassNames.className;\n\n      _this.removeClasses(node, 'exit');\n\n      addClass(node, className);\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(node, appearing);\n      }\n    };\n\n    _this.onEntering = function (node, appearing) {\n      var _this$getClassNames2 = _this.getClassNames(appearing ? 'appear' : 'enter'),\n          activeClassName = _this$getClassNames2.activeClassName;\n\n      _this.reflowAndAddClass(node, activeClassName);\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(node, appearing);\n      }\n    };\n\n    _this.onEntered = function (node, appearing) {\n      var _this$getClassNames3 = _this.getClassNames('enter'),\n          doneClassName = _this$getClassNames3.doneClassName;\n\n      _this.removeClasses(node, appearing ? 'appear' : 'enter');\n\n      addClass(node, doneClassName);\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(node, appearing);\n      }\n    };\n\n    _this.onExit = function (node) {\n      var _this$getClassNames4 = _this.getClassNames('exit'),\n          className = _this$getClassNames4.className;\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      addClass(node, className);\n\n      if (_this.props.onExit) {\n        _this.props.onExit(node);\n      }\n    };\n\n    _this.onExiting = function (node) {\n      var _this$getClassNames5 = _this.getClassNames('exit'),\n          activeClassName = _this$getClassNames5.activeClassName;\n\n      _this.reflowAndAddClass(node, activeClassName);\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(node);\n      }\n    };\n\n    _this.onExited = function (node) {\n      var _this$getClassNames6 = _this.getClassNames('exit'),\n          doneClassName = _this$getClassNames6.doneClassName;\n\n      _this.removeClasses(node, 'exit');\n\n      addClass(node, doneClassName);\n\n      if (_this.props.onExited) {\n        _this.props.onExited(node);\n      }\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var className = typeof classNames !== 'string' ? classNames[type] : classNames + '-' + type;\n      var activeClassName = typeof classNames !== 'string' ? classNames[type + 'Active'] : className + '-active';\n      var doneClassName = typeof classNames !== 'string' ? classNames[type + 'Done'] : className + '-done';\n      return {\n        className: className,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$getClassNames7 = this.getClassNames(type),\n        className = _this$getClassNames7.className,\n        activeClassName = _this$getClassNames7.activeClassName,\n        doneClassName = _this$getClassNames7.doneClassName;\n\n    className && removeClass(node, className);\n    activeClassName && removeClass(node, activeClassName);\n    doneClassName && removeClass(node, doneClassName);\n  };\n\n  _proto.reflowAndAddClass = function reflowAndAddClass(node, className) {\n    // This is for to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n    if (className) {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n      /* eslint-enable no-unused-expressions */\n\n      addClass(node, className);\n    }\n  };\n\n  _proto.render = function render() {\n    var props = _extends({}, this.props);\n\n    delete props.classNames;\n    return _react.default.createElement(_Transition.default, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(_react.default.Component);\n\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, _Transition.default.propTypes, {\n  /**\n   * The animation classNames applied to the component as it enters, exits or has finished the transition.\n   * A single name can be provided and it will be suffixed for each stage: e.g.\n   *\n   * `classNames=\"fade\"` applies `fade-enter`, `fade-enter-active`, `fade-enter-done`,\n   * `fade-exit`, `fade-exit-active`, `fade-exit-done`, `fade-appear`, and `fade-appear-active`.\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply spread\n   * them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: _PropTypes.classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nvar _default = CSSTransition;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = addClass;\n\nvar _hasClass = _interopRequireDefault(require(\"./hasClass\"));\n\nfunction addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!(0, _hasClass.default)(element, className)) if (typeof element.className === 'string') element.className = element.className + ' ' + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + ' ' + className);\n}\n\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nexports.default = hasClass;\n\nfunction hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);else return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}\n\nmodule.exports = exports[\"default\"];","'use strict';\n\nfunction replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp('(^|\\\\s)' + classToRemove + '(?:\\\\s|$)', 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n\nmodule.exports = function removeClass(element, className) {\n  if (element.classList) element.classList.remove(className);else if (typeof element.className === 'string') element.className = replaceClassName(element.className, className);else element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n};","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = require(\"react-dom\");\n\nvar _TransitionGroup = _interopRequireDefault(require(\"./TransitionGroup\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\n/**\n * The `<ReplaceTransition>` component is a specialized `Transition` component\n * that animates between two children.\n *\n * ```jsx\n * <ReplaceTransition in>\n *   <Fade><div>I appear first</div></Fade>\n *   <Fade><div>I replace the above</div></Fade>\n * </ReplaceTransition>\n * ```\n */\nvar ReplaceTransition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ReplaceTransition, _React$Component);\n\n  function ReplaceTransition() {\n    var _this;\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;\n\n    _this.handleEnter = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return _this.handleLifecycle('onEnter', 0, args);\n    };\n\n    _this.handleEntering = function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return _this.handleLifecycle('onEntering', 0, args);\n    };\n\n    _this.handleEntered = function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return _this.handleLifecycle('onEntered', 0, args);\n    };\n\n    _this.handleExit = function () {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      return _this.handleLifecycle('onExit', 1, args);\n    };\n\n    _this.handleExiting = function () {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      return _this.handleLifecycle('onExiting', 1, args);\n    };\n\n    _this.handleExited = function () {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      return _this.handleLifecycle('onExited', 1, args);\n    };\n\n    return _this;\n  }\n\n  var _proto = ReplaceTransition.prototype;\n\n  _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {\n    var _child$props;\n\n    var children = this.props.children;\n\n    var child = _react.default.Children.toArray(children)[idx];\n\n    if (child.props[handler]) (_child$props = child.props)[handler].apply(_child$props, originalArgs);\n    if (this.props[handler]) this.props[handler]((0, _reactDom.findDOMNode)(this));\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        inProp = _this$props.in,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\"]);\n\n    var _React$Children$toArr = _react.default.Children.toArray(children),\n        first = _React$Children$toArr[0],\n        second = _React$Children$toArr[1];\n\n    delete props.onEnter;\n    delete props.onEntering;\n    delete props.onEntered;\n    delete props.onExit;\n    delete props.onExiting;\n    delete props.onExited;\n    return _react.default.createElement(_TransitionGroup.default, props, inProp ? _react.default.cloneElement(first, {\n      key: 'first',\n      onEnter: this.handleEnter,\n      onEntering: this.handleEntering,\n      onEntered: this.handleEntered\n    }) : _react.default.cloneElement(second, {\n      key: 'second',\n      onEnter: this.handleExit,\n      onEntering: this.handleExiting,\n      onEntered: this.handleExited\n    }));\n  };\n\n  return ReplaceTransition;\n}(_react.default.Component);\n\nReplaceTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  in: _propTypes.default.bool.isRequired,\n  children: function children(props, propName) {\n    if (_react.default.Children.count(props[propName]) !== 2) return new Error(\"\\\"\" + propName + \"\\\" must be exactly two transition components.\");\n    return null;\n  }\n} : {};\nvar _default = ReplaceTransition;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nexports.getChildMapping = getChildMapping;\nexports.mergeChildMappings = mergeChildMappings;\nexports.getInitialChildMapping = getInitialChildMapping;\nexports.getNextChildMapping = getNextChildMapping;\n\nvar _react = require(\"react\");\n\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\nfunction getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && (0, _react.isValidElement)(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) _react.Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\n\nfunction mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nfunction getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return (0, _react.cloneElement)(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\n\nfunction getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!(0, _react.isValidElement)(child)) return;\n    var hasPrev = key in prevChildMapping;\n    var hasNext = key in nextChildMapping;\n    var prevChild = prevChildMapping[key];\n    var isLeaving = (0, _react.isValidElement)(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = (0, _react.cloneElement)(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = (0, _react.cloneElement)(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && (0, _react.isValidElement)(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = (0, _react.cloneElement)(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}"],"sourceRoot":""}